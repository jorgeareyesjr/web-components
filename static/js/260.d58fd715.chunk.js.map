{"version":3,"file":"static/js/260.d58fd715.chunk.js","mappings":"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","sources":["app/_redux/layouts/operations.ts","app/_redux/layouts/selectors.ts","app/_redux/themes/operations.ts","app/_redux/themes/selectors.ts","app/wrappers/SettingsWrapper.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["import {\n\tgetAllLayoutsRequest,\n\tsetActiveLayoutRequest,\n} from './actions';\n\n// TODO: Add types.ts\n\nconst getAllLayouts = () => getAllLayoutsRequest();\nconst setActiveLayout = (layout: any) => setActiveLayoutRequest(layout);\n\nexport {\n\tgetAllLayouts,\n\tsetActiveLayout,\n};\n","\nimport { createSelector } from 'reselect';\nimport { AppState } from '../rootReducer';\n\nconst getLoading = (state: AppState) => state.layouts.ui.loading;\nconst getError = (state: AppState) => state.layouts.data.error;\nconst getLayouts = (state: AppState) => state.layouts.data.layouts;\nconst getRegisteredLayoutsMap = (state: AppState) => state.layouts.data.registeredLayoutsMap;\nconst getActiveLayout = (state: AppState) => state.layouts.data.activeLayout;\n\nexport const getLayoutsLoadingSelector = createSelector(\n\tgetLoading,\n\t(loading) => loading,\n);\n\nexport const getLayoutsErrorSelector = createSelector(\n\tgetError,\n\t(error) => error,\n);\n\nexport const getLayoutsSelector = createSelector(\n\tgetLayouts,\n\t(layouts) => layouts,\n);\n\nexport const getRegisteredLayoutsMapSelector = createSelector(\n\tgetRegisteredLayoutsMap,\n\t(layoutsMap) => layoutsMap,\n);\n\nexport const getActiveLayoutSelector = createSelector(\n\tgetActiveLayout,\n\t(activeLayout) => activeLayout,\n);\n","import {\n\tgetAllThemesRequest,\n\tsetActiveThemeRequest,\n} from './actions';\n\n// TODO: Add types.ts\n\nconst getAllThemes = () => getAllThemesRequest();\nconst setActiveTheme = (theme: any) => setActiveThemeRequest(theme);\n\nexport {\n\tgetAllThemes,\n\tsetActiveTheme,\n};\n","import { createSelector } from 'reselect';\nimport { AppState } from '../rootReducer';\n\nconst getLoading = (state: AppState) => state.themes.ui.loading;\nconst getError = (state: AppState) => state.themes.data.error;\nconst getThemes = (state: AppState) => state.themes.data.themes;\nconst getRegisteredThemesMap = (state: AppState) => state.themes.data.registeredThemesMap;\nconst getActiveTheme = (state: AppState) => state.themes.data.activeTheme;\n\nexport const getThemesLoadingSelector = createSelector(\n\tgetLoading,\n\t(loading) => loading,\n);\n\nexport const getThemesErrorSelector = createSelector(\n\tgetError,\n\t(error) => error,\n);\n\nexport const getThemesSelector = createSelector(\n\tgetThemes,\n\t(themes) => themes,\n);\n\nexport const getRegisteredThemesMapSelector = createSelector(\n\tgetRegisteredThemesMap,\n\t(themesMap) => themesMap,\n);\n\nexport const getActiveThemeSelector = createSelector(\n\tgetActiveTheme,\n\t(activeTheme) => activeTheme,\n);\n","import React, {\n\tlazy,\n\tSuspense,\n\tuseEffect,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n/* Redux */\nimport { getAllThemes } from '../_redux/themes/operations';\nimport { getThemesSelector } from '../_redux/themes/selectors';\nimport { getAllLayouts } from '../_redux/layouts/operations';\nimport { getLayoutsSelector } from '../_redux/layouts/selectors';\n\n/* Services */\nimport { syncLocalStorage } from '../services/ManageAppData';\n\n/* Components */\nimport Spinner from '../components/Spinner/Spinner';\n\n// Note: The redux-saga middleware will automatically synchronize and keep all of the browser's localStorage data up-to-date.\nexport default function SettingsWrapper({ children }: any) {\n\tconst dispatch = useDispatch();\n\n\tconst themes = useSelector(getThemesSelector);\n\tconst layouts = useSelector(getLayoutsSelector);\n\n\t// Effect to manage the active app settings.\n\tuseEffect(() => {\n\t\tlet effectCancelled = false;\n\n\t\t// Clear the browser's localStorage, whenever the settings wrapper initializes.\n\t\tif (!effectCancelled) {\n\t\t\tsyncLocalStorage();\n\t\t};\n\n\t\t/* Visual Settings */\n\t\tif (!effectCancelled && !themes) {\n\t\t\tdispatch(getAllThemes());\n\t\t};\n\n\t\t/* Layout Settings */\n\t\tif (!effectCancelled && !layouts) {\n\t\t\tdispatch(getAllLayouts());\n\t\t};\n\n\t\treturn () => {\n\t\t\teffectCancelled = false;\n\t\t};\n\t}, [dispatch, themes, layouts]);\n\n\t// Implement nested component-based code splitting.\n\t// Note: Nested suspense components aren't fetched in parallel, but are instead fetched sequentially.\n\t// In this case, the 2nd Suspense component(s) block is deferred until after the 1st Suspense component(s) block resolves.\n\tconst VisualSettingsWrapper = lazy(() => import('./VisualSettingsWrapper'));\n\tconst LayoutSettingsWrapper = lazy(() => import('./LayoutSettingsWrapper'));\n\n\treturn (\n\t\t<Suspense fallback={\n\t\t\t<Spinner message={`Connecting to database...`} />\n\t\t}>\n\t\t\t<VisualSettingsWrapper themes={themes}>\n\t\t\t\t<LayoutSettingsWrapper layouts={layouts}>\n\t\t\t\t\t<Suspense fallback={\n\t\t\t\t\t\t<Spinner message={`Applying system preferences...`} />\n\t\t\t\t\t}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</Suspense>\n\t\t\t\t</LayoutSettingsWrapper>\n\t\t\t</VisualSettingsWrapper>\n\t\t</Suspense>\n\t);\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["getAllLayouts","getAllLayoutsRequest","setActiveLayout","layout","setActiveLayoutRequest","getLayoutsSelector","createSelector","state","layouts","ui","loading","data","error","getRegisteredLayoutsMapSelector","registeredLayoutsMap","layoutsMap","getActiveLayoutSelector","activeLayout","getAllThemes","getAllThemesRequest","setActiveTheme","theme","setActiveThemeRequest","getThemesSelector","themes","getRegisteredThemesMapSelector","registeredThemesMap","themesMap","getActiveThemeSelector","activeTheme","SettingsWrapper","children","dispatch","useDispatch","useSelector","useEffect","effectCancelled","syncLocalStorage","VisualSettingsWrapper","lazy","LayoutSettingsWrapper","Suspense","fallback","message","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}